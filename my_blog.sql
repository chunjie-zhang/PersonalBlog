/*
Navicat MySQL Data Transfer
Source Host     : localhost:3306
Source Database : my_blog
Target Host     : localhost:3306
Target Database : my_blog
Date: 2020-04-03 18:10:57
*/

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for blog
-- ----------------------------
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(128) NOT NULL,
  `content` text NOT NULL,
  `views` int(11) NOT NULL,
  `tags` varchar(256) NOT NULL,
  `ctime` int(11) NOT NULL,
  `utime` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_ctime` (`ctime`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4;

-- ----------------------------
-- Records of blog
-- ----------------------------
INSERT INTO `blog` VALUES ('1', '博主的第一个博客', '大家好，我是张春节', '31', '前端知识', '1584864441', '1584864441');
INSERT INTO `blog` VALUES ('3', 'HTML中行级元素与块级元素有哪些及它们的区别', '<div>行内、块状元素区别：</div><div>(1).块级元素会独占一行，其宽度自动填满其父元素宽度行内元素不会独占一行，相邻的行内元素会排列在同一行里，知道一行排不下，才会换行，其宽度随元素的内容而变化</div><div>(2). 一般情况下，块级元素可以设置 width,height属性，行内元素设置width, height无效</div><div>(注意：块级元素即使设置了宽度，仍然是独占一行的)</div><div>(3).块级元素可以设置margin 和 padding. 行内元素的水平方向的padding-left,padding-right,margin-left,margin-right都产生边距效果，但是竖直方向的padding-top,padding-bottom,margin-top,margin-bottom都不会产生边距效果。（水平方向有效，竖直方向无效）</div><div><br></div><div>块级元素</div><div>address 定义地址</div><div>caption 定义表格标题</div><div>dd 定义列表中定义条目</div><div>div 定义文档中的分区或节</div><div>dl 定义列表</div><div>dt<span style=\"white-space:pre\">	</span>定义列表中的项目</div><div>fieldset 定义一个框架集</div><div>form 创建 HTML 表单</div><div>h1 定义最大的标题</div><div>h2<span style=\"white-space:pre\">	</span>定义副标题</div><div>h3<span style=\"white-space:pre\">	</span>定义标题</div><div>h4&gt;定义标题</div><div>h5定义标题</div><div>h6定义最小的标题</div><div>hr<span style=\"white-space:pre\">	</span>创建一条水平线</div><div>legend<span style=\"white-space:pre\">	</span>元素为 fieldset 元素定义标题</div><div>li<span style=\"white-space:pre\">	</span>标签定义列表项目</div><div>noframes<span style=\"white-space:pre\">	</span>为那些不支持框架的浏览器显示文本，于 frameset 元素内部</div><div>noscript<span style=\"white-space:pre\">	</span>定义在脚本未被执行时的替代内容</div><div>ol<span style=\"white-space:pre\">	</span>定义有序列表</div><div>ul<span style=\"white-space:pre\">	</span>定义无序列表</div><div>p<span style=\"white-space:pre\">	</span>标签定义段落</div><div>pre<span style=\"white-space:pre\">	</span>定义预格式化的文本</div><div>table<span style=\"white-space:pre\">	</span>标签定义 HTML 表格</div><div>tbody<span style=\"white-space:pre\">	</span>标签表格主体（正文）</div><div>td<span style=\"white-space:pre\">	</span>表格中的标准单元格</div><div>tfoot<span style=\"white-space:pre\">	</span>定义表格的页脚（脚注或表注）</div><div>th<span style=\"white-space:pre\">	</span>定义表头单元格</div><div>thead<span style=\"white-space:pre\">	</span>标签定义表格的表头</div><div>tr<span style=\"white-space:pre\">	</span>定义表格中的行</div><div>行内元素列表</div><div>a<span style=\"white-space:pre\">	</span>标签可定义锚</div><div>abbr<span style=\"white-space:pre\">	</span>表示一个缩写形式</div><div>acronym<span style=\"white-space:pre\">	</span>定义只取首字母缩写</div><div>b<span style=\"white-space:pre\">	</span>字体加粗</div><div>bdo<span style=\"white-space:pre\">	</span>可覆盖默认的文本方向</div><div>big<span style=\"white-space:pre\">	</span>大号字体加粗</div><div>br<span style=\"white-space:pre\">	</span>换行</div><div>cite<span style=\"white-space:pre\">	</span>引用进行定义</div><div>code<span style=\"white-space:pre\">	</span>定义计算机代码文本</div><div>dfn<span style=\"white-space:pre\">	</span>定义一个定义项目</div><div>em<span style=\"white-space:pre\">	</span>定义为强调的内容</div><div>i<span style=\"white-space:pre\">	</span>斜体文本效果</div><div>img<span style=\"white-space:pre\">	</span>向网页中嵌入一幅图像</div><div>input<span style=\"white-space:pre\">	</span>输入框</div><div>kbd<span style=\"white-space:pre\">	</span>定义键盘文本</div><div>label<span style=\"white-space:pre\">	</span>标签为 input 元素定义标注（标记）</div><div>q<span style=\"white-space:pre\">	</span>定义短的引用</div><div>samp<span style=\"white-space:pre\">	</span>定义样本文本</div><div>select<span style=\"white-space:pre\">	</span>创建单选或多选菜单</div><div>small&gt;呈现小号字体效果</div><div>span<span style=\"white-space:pre\">	</span>组合文档中的行内元素</div><div>strong<span style=\"white-space:pre\">	</span>语气更强的强调的内容</div><div>sub<span style=\"white-space:pre\">	</span>定义下标文本</div><div>sup&gt;定义上标文本</div><div>textarea<span style=\"white-space:pre\">	</span>多行的文本输入控件</div><div>tt<span style=\"white-space:pre\">	</span>打字机或者等宽的文本效果</div><div>var<span style=\"white-space:pre\">	</span>定义变量</div><div>可变元素素列表–可变元素为根据上下文语境决定该元素为块元素或者内联元素</div><div>button<span style=\"white-space:pre\">	</span>按钮</div><div>del<span style=\"white-space:pre\">	</span>定义文档中已被删除的文本</div><div>iframe<span style=\"white-space:pre\">	</span>创建包含另外一个文档的内联框架（即行内框架）</div><div>ins<span style=\"white-space:pre\">	</span>标签定义已经被插入文档中的文本</div><div>map 客户端图像映射（即热区）</div><div>object<span style=\"white-space:pre\">	</span>object对象</div>', '62', 'HTML', '1584863929', '1584863929');
INSERT INTO `blog` VALUES ('4', '三栏布局的七种实现方法', '<div>1、绝对定位布局：position + margin</div><div>html结构：</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left\"&gt;Left&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right\"&gt;Right&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main\"&gt;Main&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp;body,html{</div><div>&nbsp; &nbsp; height: 100%;</div><div>&nbsp; &nbsp; padding: 0;</div><div>&nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; overflow: hidden;</div><div>}</div><div>/*左右进行绝对定位*/</div><div>.left,.right{</div><div>&nbsp; &nbsp; position: absolute;</div><div>&nbsp; &nbsp; height:100%;&nbsp;&nbsp;</div><div>&nbsp; &nbsp; top: 0;</div><div>&nbsp; &nbsp; background: #ff69b4;</div><div>}</div><div>.left{</div><div>&nbsp; &nbsp; left: 0;</div><div>&nbsp; &nbsp; width: 100px;</div><div>}</div><div>.right{</div><div>&nbsp; &nbsp; right: 0;</div><div>&nbsp; &nbsp; width: 200px;</div><div>}</div><div>/*中间用margin空出左右元素所占的空间*/</div><div>.main{</div><div>&nbsp; &nbsp; height:100%;&nbsp;</div><div>&nbsp; &nbsp; margin: 0 100px 0 200px ;</div><div>&nbsp; &nbsp; background: #659;</div><div>}</div><div><br></div><div>缺点: 如果中间栏含有最小宽度限制，或是含有宽度的内部元素，当浏览器宽度小到一定程度，会发生层重叠的情况。</div><div><br></div><div>2、浮动布局： float + margin</div><div>html结构：</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left\"&gt;Left&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right\"&gt;Right&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main\"&gt;Main&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp; &nbsp; body,html{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; padding:0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; /*左边栏左浮动*/</div><div>&nbsp; &nbsp; .left{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; float:left;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:100px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background:#ff69b4;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; /*中间栏自适应*/</div><div>&nbsp; &nbsp; .main{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin:0 200px 0 100px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #659;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; /*右边栏右浮动*/</div><div>&nbsp; &nbsp; .right{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; float:right;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background:#ff69b4;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>3、flex布局</div><div>html结构：</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main\"&gt;center&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right\"&gt;right&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp;.container{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .left{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .main{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; flex: 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: blue;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .right{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>这种布局方式，高度由内容决定。</div><div><br></div><div>4、table布局</div><div>html结构:</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left\"&gt;left&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main\"&gt;center&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right\"&gt;right&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp; &nbsp; &nbsp;.container{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; display: table;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:100%;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .container&gt;div{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; display: table-cell;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .left{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width: 100px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .main{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: blue;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .right{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width: 200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>高度由内容决定。</div><div><br></div><div>5、Grid网格布局</div><div>html结构：</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left\"&gt;left&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main\"&gt;center&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right\"&gt;right&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp; &nbsp; .container{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; display: grid;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; grid-template-rows: 100px;&nbsp; /*设置行高*/</div><div>&nbsp; &nbsp; &nbsp; &nbsp; grid-template-columns: 100px auto 200px;&nbsp; /*设置列数属性*/</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .left{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .main{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: blue;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .right{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background:red;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>6、圣杯布局</div><div>html结构：</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main col\"&gt;Main&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left col\"&gt;Left&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right col\"&gt;Right&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp; &nbsp; /* 两边定宽，中间自适用 */</div><div>&nbsp; &nbsp; body,html,.container{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; padding:0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .col{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; float: left;&nbsp; &nbsp;/* 三个col都设置float: left,为了把left和right定位到左右部分 */</div><div>&nbsp; &nbsp; &nbsp; &nbsp; position:relative;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp;/*父元素空出左右栏位子: 因为上一步中，左右栏定位成功了，但是中间栏的内容会被遮盖住*/</div><div>&nbsp; &nbsp; .container{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; padding:0 200px 0 100px;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; /*左边栏*/</div><div>&nbsp; &nbsp; .left{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; left:-100px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width: 100px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin-left: -100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #ff69b4;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; /*中间栏*/</div><div>&nbsp; &nbsp; .main{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #659;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; /*右边栏*/</div><div>&nbsp; &nbsp; .right{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; right:-200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin-left: -200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #ff69b4;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>总结：圣杯布局用到了浮动float、负边距、相对定位relative，不添加额外标签</div><div><br></div><div>7、双飞翼布局</div><div>html结构：</div><div><br></div><div>&lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"main col \"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"main_inner\"&gt;Main&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"left col \"&gt;Left&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"right col \"&gt;Right&lt;/div&gt;</div><div>&lt;/div&gt;</div><div><br></div><div>css样式：</div><div><br></div><div>&nbsp; &nbsp; body,html,.container{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; padding:0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .col{&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; float: left; /* 把left和right定位到左右部分 */</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .main{&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #659;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .main_inner{&nbsp; &nbsp;/* 处理中间栏的内容被遮盖问题 */</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin:0 200px 0 100px;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .left{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width: 100px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin-left: -100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #ff69b4;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; .right{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; height:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; width:200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; margin-left: -200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; background: #ff69b4;</div><div>&nbsp; &nbsp; }</div><div><br></div><div>双飞翼布局的好处：</div><div><br></div><div>（1）主要的内容先加载的优化。</div><div>（2）兼容目前所有的主流浏览器，包括IE6在内。</div><div>（3）实现不同的布局方式，可以通过调整相关CSS属性即可实现。</div><div>8、对比圣杯布局和双飞翼布局：</div><div>（1）都是左右栏定宽，中间栏自适应的三栏布局，中间栏都放到文档流前面，保证先行渲染。</div><div>（2）解决方案基本相似：都是三栏全部设置左浮动float：left,然后分别结局中间栏内容被覆盖的问题。</div><div>(3)解决中间栏内容被覆盖问题时，圣杯魔兽1设置父元素的padding，双飞翼布局在中间栏嵌套一个div，内容放到新的div中，并设置margin，实际上，双飞翼布局就是圣杯布局的改进方案。</div>', '46', 'HTMLcss', '1584864187', '1584864187');
INSERT INTO `blog` VALUES ('5', '闭包问题', '<div>今天遇到一个题目，感觉这个题目有点东西，特发出来和大家分享。</div><div><br></div><div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"en\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Document&lt;/title&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;&nbsp;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp;var a=0;</div><div>&nbsp; &nbsp; &nbsp;b=0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;function A(a){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A=function(b){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;alert(a+b++);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(a++);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp;A(1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;A(2);</div><div><br></div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&nbsp; &lt;/body&gt;</div><div>&lt;/html&gt;</div><div><br></div><div>最后的结果是1，4</div><div>因为形成了闭包，第一次实参1传进去后，计算机识别的是：</div><div>functionA(1){</div><div>A={};//计算机只识别等于号前面的，后面的不看</div><div>}</div><div>alert(a++);</div><div>输出1；</div><div>第二次A=function (b){</div><div>alert(a+b++);}覆盖了 function A(a){ } ；</div><div>因为A=function{}是一个匿名函数，是新的A函数它覆盖了前面的A函数 ,但是a的值却是</div><div>在原来a函数的作用域拿的，是a+2；因为a++了；所以a+b++就是4；</div><div>总结：这题主要考的的闭包；里面的函数外面执行就形成了闭包。</div>', '60', 'JavaScript', '1584864305', '1584864305');
INSERT INTO `blog` VALUES ('6', 'js中append,appendChild及innerHTML的认识', '<div>append用法：</div><div>可以同时传入多个节点或字符串，没有返回值。</div><div>appendchild用法：</div><div>只能传一个节点，且不直接支持传字符串。</div><div>innerHTML用法：</div><div>添加纯字符串，不能获取内部元素的属性。</div><div>下面是我打的代码，可以让大家分清它们的用法。</div><div><br></div><div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"en\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Document&lt;/title&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp;&lt;p&gt;hello world&lt;/p&gt;</div><div>&nbsp; &nbsp;&lt;p&gt;谢谢，观看&lt;/p&gt;</div><div>&nbsp; &nbsp;&lt;p&gt;请大家多多评论&lt;/p&gt;</div><div>&nbsp; &nbsp;&lt;script&gt;</div><div>&nbsp; &nbsp; var newp=document.createElement(\"p\");//创建新的节点 p</div><div>&nbsp; &nbsp; newp.innerHTML=\"这个是新加的\"; //给新创建的节点p 添加内容</div><div>&nbsp; &nbsp; document.body.appendChild(newp); //在第二个节点之前插入新创建的节点</div><div>&nbsp; &nbsp;&lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div><div><br></div><div>打印出的效果：</div><div>hello world</div>', '65', 'JavaScript', '1584864441', '1584864441');
INSERT INTO `blog` VALUES ('7', '轮播图', '<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"en\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;轮播图&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; *{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding:0px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; list-style:none;</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; .start{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position:relative;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 250px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin:100px auto 0px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border:2px solid black;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overflow: hidden;</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; .start .start1{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;height:250px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;width:2000px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;position: absolute;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;left:0px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;top:0px;</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; .start .start1 li{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float:left;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height:250px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width:400px;</div><div>&nbsp; &nbsp; &nbsp; }&nbsp;</div><div>&nbsp; &nbsp; &nbsp; .start .start1 li img{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width:100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 100%;&nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; .start .btn {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; top: 50%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: -20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 40px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 40px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #fff;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #000;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; line-height: 40px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; opacity: 0.1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .start:hover .btn {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; opacity: 0.7;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; .start .leftbtn {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; left: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; .start .rightbtn {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; right: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .start .end {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .start .end span {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: inline-block;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 6px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; .start .end .active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f40;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"start\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&lt;ul class=\"start1\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;img src=\"./cat1.jpg\"/&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;img src=\"./cat2.jpg\"/&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;img src=\"./cat3.jpg\"/&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;img src=\"./cat4.jpg\"/&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; **图片的话自己可以修改哈，还有位置。**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;img src=\"./cat1.jpg\"/&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/li&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&lt;/ul&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"btn leftbtn\"&gt;&amp;lt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"btn rightbtn\"&gt;&amp;gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"end\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;span class=\"active\"&gt;&lt;/span&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;&lt;/span&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;&lt;/span&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;&lt;/span&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp;&lt;/div&gt;</div><div>&nbsp;**这个外部引用的js文件下面会给出**</div><div>&nbsp;&lt;script src=\'./move.js\'&gt;&lt;/script&gt;</div><div>&nbsp;&lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; var timer = null;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var sliderPage = document.getElementsByClassName(\'start1\')[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var moveWidth = sliderPage.children[0].offsetWidth;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var num = sliderPage.children.length - 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var leftBtn = document.getElementsByClassName(\'leftbtn\')[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var rightBtn = document.getElementsByClassName(\'rightbtn\')[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var oSpanArray = document.getElementsByClassName(\'end\')[0].getElementsByTagName(\'span\');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var lock = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var index = 0;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; leftBtn.onclick = function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; autoMove(\'right-&gt;left\');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; rightBtn.onclick = function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; autoMove(\'left-&gt;right\');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;**这个部分是按钮**</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; for (var i = 0; i &lt; oSpanArray.length; i++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (function (myIndex) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; oSpanArray[i].onclick = function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lock = false;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;clearTimeout(timer);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index = myIndex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;startMove(sliderPage, {left: - index * moveWidth}, function () {&nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lock = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;timer = setTimeout(autoMove, 1500);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;changeIndex(index);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;})</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })(i)&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; **上面这部分是让索引可以点击跳转图片**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; function autoMove (direction) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;**加lock是为了让你点击按钮快速的时候不出错**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (lock) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lock = false;&nbsp; &nbsp; &nbsp;&nbsp;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clearTimeout(timer);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; **默认方向为向左**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!direction || direction == \'left-&gt;right\') {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; **startMove（）是一个外部的js文件的函数下面会给大家**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startMove(sliderPage, {left: sliderPage.offsetLeft - moveWidth}, function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (sliderPage.offsetLeft == - num * moveWidth) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sliderPage.style.left = \'0px\';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timer = setTimeout(autoMove, 1500);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lock = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; changeIndex(index);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else if (direction == \'right-&gt;left\') {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (sliderPage.offsetLeft == 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sliderPage.style.left = - num * moveWidth + \'px\';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index = num;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index--;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startMove(sliderPage, {left: sliderPage.offsetLeft + moveWidth}, function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timer = setTimeout(autoMove, 1500);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lock = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; changeIndex(index);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>**这个是让索引按第几个图片动**</div><div>&nbsp; &nbsp; &nbsp; &nbsp; function changeIndex (_index) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (var i = 0; i &lt; oSpanArray.length; i++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; oSpanArray[i].className = \'\';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; oSpanArray[_index].className = \'active\';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; timer = setTimeout(autoMove, 1500);&nbsp;&nbsp;</div><div>&nbsp;&lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div><div><br></div><div><br></div><div>**这个是外部的js文件，是一个让图片运动的文件**</div><div>function getStyle (obj, attr) {</div><div>&nbsp; &nbsp; if (obj.currentStyle) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return obj.currentStyle[attr];</div><div>&nbsp; &nbsp; }else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return window.getComputedStyle(obj, false)[attr];</div><div>&nbsp; &nbsp; }</div><div>}</div><div>&nbsp; &nbsp; // object是dom（元素），data是对象，function是函数传方法&nbsp; &nbsp;</div><div>function startMove (obj, data, func) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; clearInterval(obj.timer);</div><div>&nbsp; &nbsp; var iSpeed;</div><div>&nbsp; &nbsp; var iCur;</div><div>&nbsp; &nbsp; var name;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; startTimer = obj.timer = setInterval(function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var bStop = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; for (var attr in data) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (attr === \'opacity\') {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name = attr;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iCur = parseFloat(getStyle(obj, attr)) * 100;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iCur = parseInt(getStyle(obj, attr));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iSpeed = ( data[attr] - iCur) / 8;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (iSpeed &gt; 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iSpeed = Math.ceil(iSpeed);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iSpeed = Math.floor(iSpeed);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (attr === \'opacity\') {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.style.opacity = ( iCur + iSpeed ) / 100;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.style[attr] = iCur + iSpeed + \'px\';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( Math.floor(Math.abs(data[attr] - iCur)) != 0 ) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bStop = false;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (bStop) {<span style=\"white-space:pre\">					</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clearInterval(obj.timer);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (name === \'opacity\') {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.style.opacity = data[name] / 100;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; func();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },30);</div><div>}&nbsp;&nbsp;</div>', '118', '轮播图', '1584864593', '1584864593');

-- ----------------------------
-- Table structure for comments
-- ----------------------------
DROP TABLE IF EXISTS `comments`;
CREATE TABLE `comments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `blog_id` int(11) NOT NULL,
  `parent` int(11) NOT NULL,
  `parent_name` varchar(64) NOT NULL,
  `user_name` varchar(64) NOT NULL,
  `comments` varchar(256) NOT NULL,
  `email` varchar(128) NOT NULL,
  `ctime` int(11) NOT NULL,
  `utime` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx` (`blog_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comments
-- ----------------------------
INSERT INTO `comments` VALUES ('1', '1', '123', '', '张春节', 'hello', '3265530469@qq.com', '1584871792', '1584871792');
INSERT INTO `comments` VALUES ('2', '7', '-1', '0', 'parent', '大佬666...', '3265530469@qq.com', '1584871671', '1584871671');
INSERT INTO `comments` VALUES ('3', '5', '-1', '0', 'e沐风尘', '盖一个楼', '3265530469@qq.com', '1584871792', '1584871792');
INSERT INTO `comments` VALUES ('4', '7', '2', 'parent', '张春节', '低调低调', '3265530469@qq.com', '1584877523', '1584877523');
INSERT INTO `comments` VALUES ('5', '7', '4', '张春节', 'parent', '嗯嗯好的', '3265530469@qq.com', '1584877604', '1584877604');

-- ----------------------------
-- Table structure for every_day
-- ----------------------------
DROP TABLE IF EXISTS `every_day`;
CREATE TABLE `every_day` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL,
  `ctime` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_ctime` (`ctime`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of every_day
-- ----------------------------
INSERT INTO `every_day` VALUES ('1', 'day day up,good good study<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ----------zhangchunjie</div>', '1578470260');
INSERT INTO `every_day` VALUES ('2', 'zhanbhghqkjehv', '1580362231');
INSERT INTO `every_day` VALUES ('3', 'good&nbsp; good&nbsp; study&nbsp; day day up<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ------张春节</div>', '1584605378');

-- ----------------------------
-- Table structure for tag_blog_mapping
-- ----------------------------
DROP TABLE IF EXISTS `tag_blog_mapping`;
CREATE TABLE `tag_blog_mapping` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tag_id` int(11) NOT NULL,
  `blog_id` int(11) NOT NULL,
  `ctime` int(11) NOT NULL,
  `utime` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uq_tag_id_blog_id` (`tag_id`,`blog_id`),
  KEY `idx_tag_id` (`tag_id`),
  KEY `idx_blog_id` (`blog_id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tag_blog_mapping
-- ----------------------------
INSERT INTO `tag_blog_mapping` VALUES ('1', '1', '1', '2021', '2022');
INSERT INTO `tag_blog_mapping` VALUES ('3', '3', '3', '1584863929', '1584863929');
INSERT INTO `tag_blog_mapping` VALUES ('4', '4', '4', '1584864187', '1584864187');
INSERT INTO `tag_blog_mapping` VALUES ('5', '5', '5', '1584864305', '1584864305');
INSERT INTO `tag_blog_mapping` VALUES ('6', '5', '6', '1584864441', '1584864441');
INSERT INTO `tag_blog_mapping` VALUES ('7', '2', '7', '1584864593', '1584864593');
INSERT INTO `tag_blog_mapping` VALUES ('8', '6', '8', '1585826135', '1585826135');

-- ----------------------------
-- Table structure for tags
-- ----------------------------
DROP TABLE IF EXISTS `tags`;
CREATE TABLE `tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tag` varchar(64) NOT NULL,
  `ctime` int(11) NOT NULL,
  `utime` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `tag_nq` (`tag`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tags
-- ----------------------------
INSERT INTO `tags` VALUES ('1', '前端知识', '2020', '2021');
INSERT INTO `tags` VALUES ('2', '轮播图', '2020', '2022');
INSERT INTO `tags` VALUES ('3', 'HTML', '1584863929', '1584863929');
INSERT INTO `tags` VALUES ('4', 'HTMLcss', '1584864187', '1584864187');
INSERT INTO `tags` VALUES ('5', 'JavaScript', '1584864305', '1584864305');
